// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: parsimony.proto
// Protobuf C++ Version: 5.29.3

#include "parsimony.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Parsimony {

inline constexpr node_metadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : clade_annotations_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR node_metadata::node_metadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct node_metadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR node_metadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~node_metadataDefaultTypeInternal() {}
  union {
    node_metadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 node_metadataDefaultTypeInternal _node_metadata_default_instance_;

inline constexpr mut::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mut_nuc_{},
        _mut_nuc_cached_byte_size_{0},
        chromosome_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{0},
        ref_nuc_{0},
        par_nuc_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR mut::mut(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct mutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR mutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~mutDefaultTypeInternal() {}
  union {
    mut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 mutDefaultTypeInternal _mut_default_instance_;

inline constexpr condensed_node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : condensed_leaves_{},
        node_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR condensed_node::condensed_node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct condensed_nodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR condensed_nodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~condensed_nodeDefaultTypeInternal() {}
  union {
    condensed_node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 condensed_nodeDefaultTypeInternal _condensed_node_default_instance_;

inline constexpr mutation_list::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mutation_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR mutation_list::mutation_list(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct mutation_listDefaultTypeInternal {
  PROTOBUF_CONSTEXPR mutation_listDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~mutation_listDefaultTypeInternal() {}
  union {
    mutation_list _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 mutation_listDefaultTypeInternal _mutation_list_default_instance_;

inline constexpr data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_mutations_{},
        condensed_nodes_{},
        metadata_{},
        newick_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR data::data(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct dataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~dataDefaultTypeInternal() {}
  union {
    data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dataDefaultTypeInternal _data_default_instance_;
}  // namespace Parsimony
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_parsimony_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_parsimony_2eproto = nullptr;
const ::uint32_t
    TableStruct_parsimony_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _impl_.ref_nuc_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _impl_.par_nuc_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _impl_.mut_nuc_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::mut, _impl_.chromosome_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Parsimony::mutation_list, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Parsimony::mutation_list, _impl_.mutation_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Parsimony::condensed_node, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Parsimony::condensed_node, _impl_.node_name_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::condensed_node, _impl_.condensed_leaves_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Parsimony::node_metadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Parsimony::node_metadata, _impl_.clade_annotations_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Parsimony::data, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Parsimony::data, _impl_.newick_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::data, _impl_.node_mutations_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::data, _impl_.condensed_nodes_),
        PROTOBUF_FIELD_OFFSET(::Parsimony::data, _impl_.metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Parsimony::mut)},
        {13, -1, -1, sizeof(::Parsimony::mutation_list)},
        {22, -1, -1, sizeof(::Parsimony::condensed_node)},
        {32, -1, -1, sizeof(::Parsimony::node_metadata)},
        {41, -1, -1, sizeof(::Parsimony::data)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Parsimony::_mut_default_instance_._instance,
    &::Parsimony::_mutation_list_default_instance_._instance,
    &::Parsimony::_condensed_node_default_instance_._instance,
    &::Parsimony::_node_metadata_default_instance_._instance,
    &::Parsimony::_data_default_instance_._instance,
};
const char descriptor_table_protodef_parsimony_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017parsimony.proto\022\tParsimony\"^\n\003mut\022\020\n\010p"
    "osition\030\001 \001(\005\022\017\n\007ref_nuc\030\002 \001(\005\022\017\n\007par_nu"
    "c\030\003 \001(\005\022\017\n\007mut_nuc\030\004 \003(\005\022\022\n\nchromosome\030\005"
    " \001(\t\"1\n\rmutation_list\022 \n\010mutation\030\001 \003(\0132"
    "\016.Parsimony.mut\"=\n\016condensed_node\022\021\n\tnod"
    "e_name\030\001 \001(\t\022\030\n\020condensed_leaves\030\002 \003(\t\"*"
    "\n\rnode_metadata\022\031\n\021clade_annotations\030\001 \003"
    "(\t\"\250\001\n\004data\022\016\n\006newick\030\001 \001(\t\0220\n\016node_muta"
    "tions\030\002 \003(\0132\030.Parsimony.mutation_list\0222\n"
    "\017condensed_nodes\030\003 \003(\0132\031.Parsimony.conde"
    "nsed_node\022*\n\010metadata\030\004 \003(\0132\030.Parsimony."
    "node_metadatab\006proto3"
};
static ::absl::once_flag descriptor_table_parsimony_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_parsimony_2eproto = {
    false,
    false,
    461,
    descriptor_table_protodef_parsimony_2eproto,
    "parsimony.proto",
    &descriptor_table_parsimony_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_parsimony_2eproto::offsets,
    file_level_enum_descriptors_parsimony_2eproto,
    file_level_service_descriptors_parsimony_2eproto,
};
namespace Parsimony {
// ===================================================================

class mut::_Internal {
 public:
};

mut::mut(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Parsimony.mut)
}
inline PROTOBUF_NDEBUG_INLINE mut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Parsimony::mut& from_msg)
      : mut_nuc_{visibility, arena, from.mut_nuc_},
        _mut_nuc_cached_byte_size_{0},
        chromosome_(arena, from.chromosome_),
        _cached_size_{0} {}

mut::mut(
    ::google::protobuf::Arena* arena,
    const mut& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  mut* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, position_),
           offsetof(Impl_, par_nuc_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::par_nuc_));

  // @@protoc_insertion_point(copy_constructor:Parsimony.mut)
}
inline PROTOBUF_NDEBUG_INLINE mut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mut_nuc_{visibility, arena},
        _mut_nuc_cached_byte_size_{0},
        chromosome_(arena),
        _cached_size_{0} {}

inline void mut::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, par_nuc_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::par_nuc_));
}
mut::~mut() {
  // @@protoc_insertion_point(destructor:Parsimony.mut)
  SharedDtor(*this);
}
inline void mut::SharedDtor(MessageLite& self) {
  mut& this_ = static_cast<mut&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chromosome_.Destroy();
  this_._impl_.~Impl_();
}

inline void* mut::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) mut(arena);
}
constexpr auto mut::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(mut, _impl_.mut_nuc_) +
          decltype(mut::_impl_.mut_nuc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(mut), alignof(mut), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&mut::PlacementNew_,
                                 sizeof(mut),
                                 alignof(mut));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull mut::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_mut_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &mut::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<mut>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &mut::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<mut>(), &mut::ByteSizeLong,
            &mut::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(mut, _impl_._cached_size_),
        false,
    },
    &mut::kDescriptorMethods,
    &descriptor_table_parsimony_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* mut::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 32, 2> mut::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Parsimony::mut>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 position = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(mut, _impl_.position_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(mut, _impl_.position_)}},
    // int32 ref_nuc = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(mut, _impl_.ref_nuc_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(mut, _impl_.ref_nuc_)}},
    // int32 par_nuc = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(mut, _impl_.par_nuc_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(mut, _impl_.par_nuc_)}},
    // repeated int32 mut_nuc = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(mut, _impl_.mut_nuc_)}},
    // string chromosome = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(mut, _impl_.chromosome_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 position = 1;
    {PROTOBUF_FIELD_OFFSET(mut, _impl_.position_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ref_nuc = 2;
    {PROTOBUF_FIELD_OFFSET(mut, _impl_.ref_nuc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 par_nuc = 3;
    {PROTOBUF_FIELD_OFFSET(mut, _impl_.par_nuc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 mut_nuc = 4;
    {PROTOBUF_FIELD_OFFSET(mut, _impl_.mut_nuc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string chromosome = 5;
    {PROTOBUF_FIELD_OFFSET(mut, _impl_.chromosome_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\0\0\0\12\0\0"
    "Parsimony.mut"
    "chromosome"
  }},
};

PROTOBUF_NOINLINE void mut::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.mut)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mut_nuc_.Clear();
  _impl_.chromosome_.ClearToEmpty();
  ::memset(&_impl_.position_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.par_nuc_) -
      reinterpret_cast<char*>(&_impl_.position_)) + sizeof(_impl_.par_nuc_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* mut::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const mut& this_ = static_cast<const mut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* mut::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const mut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Parsimony.mut)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 position = 1;
          if (this_._internal_position() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_position(), target);
          }

          // int32 ref_nuc = 2;
          if (this_._internal_ref_nuc() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_ref_nuc(), target);
          }

          // int32 par_nuc = 3;
          if (this_._internal_par_nuc() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_par_nuc(), target);
          }

          // repeated int32 mut_nuc = 4;
          {
            int byte_size = this_._impl_._mut_nuc_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  4, this_._internal_mut_nuc(), byte_size, target);
            }
          }

          // string chromosome = 5;
          if (!this_._internal_chromosome().empty()) {
            const std::string& _s = this_._internal_chromosome();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Parsimony.mut.chromosome");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Parsimony.mut)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t mut::ByteSizeLong(const MessageLite& base) {
          const mut& this_ = static_cast<const mut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t mut::ByteSizeLong() const {
          const mut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Parsimony.mut)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 mut_nuc = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_mut_nuc(), 1,
                      this_._impl_._mut_nuc_cached_byte_size_);
            }
          }
           {
            // string chromosome = 5;
            if (!this_._internal_chromosome().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chromosome());
            }
            // int32 position = 1;
            if (this_._internal_position() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_position());
            }
            // int32 ref_nuc = 2;
            if (this_._internal_ref_nuc() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ref_nuc());
            }
            // int32 par_nuc = 3;
            if (this_._internal_par_nuc() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_par_nuc());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void mut::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<mut*>(&to_msg);
  auto& from = static_cast<const mut&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.mut)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mut_nuc()->MergeFrom(from._internal_mut_nuc());
  if (!from._internal_chromosome().empty()) {
    _this->_internal_set_chromosome(from._internal_chromosome());
  }
  if (from._internal_position() != 0) {
    _this->_impl_.position_ = from._impl_.position_;
  }
  if (from._internal_ref_nuc() != 0) {
    _this->_impl_.ref_nuc_ = from._impl_.ref_nuc_;
  }
  if (from._internal_par_nuc() != 0) {
    _this->_impl_.par_nuc_ = from._impl_.par_nuc_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void mut::CopyFrom(const mut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.mut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void mut::InternalSwap(mut* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mut_nuc_.InternalSwap(&other->_impl_.mut_nuc_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chromosome_, &other->_impl_.chromosome_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(mut, _impl_.par_nuc_)
      + sizeof(mut::_impl_.par_nuc_)
      - PROTOBUF_FIELD_OFFSET(mut, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata mut::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class mutation_list::_Internal {
 public:
};

mutation_list::mutation_list(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Parsimony.mutation_list)
}
inline PROTOBUF_NDEBUG_INLINE mutation_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Parsimony::mutation_list& from_msg)
      : mutation_{visibility, arena, from.mutation_},
        _cached_size_{0} {}

mutation_list::mutation_list(
    ::google::protobuf::Arena* arena,
    const mutation_list& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  mutation_list* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Parsimony.mutation_list)
}
inline PROTOBUF_NDEBUG_INLINE mutation_list::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mutation_{visibility, arena},
        _cached_size_{0} {}

inline void mutation_list::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
mutation_list::~mutation_list() {
  // @@protoc_insertion_point(destructor:Parsimony.mutation_list)
  SharedDtor(*this);
}
inline void mutation_list::SharedDtor(MessageLite& self) {
  mutation_list& this_ = static_cast<mutation_list&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* mutation_list::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) mutation_list(arena);
}
constexpr auto mutation_list::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(mutation_list, _impl_.mutation_) +
          decltype(mutation_list::_impl_.mutation_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(mutation_list), alignof(mutation_list), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&mutation_list::PlacementNew_,
                                 sizeof(mutation_list),
                                 alignof(mutation_list));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull mutation_list::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_mutation_list_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &mutation_list::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<mutation_list>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &mutation_list::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<mutation_list>(), &mutation_list::ByteSizeLong,
            &mutation_list::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(mutation_list, _impl_._cached_size_),
        false,
    },
    &mutation_list::kDescriptorMethods,
    &descriptor_table_parsimony_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* mutation_list::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> mutation_list::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Parsimony::mutation_list>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Parsimony.mut mutation = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(mutation_list, _impl_.mutation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Parsimony.mut mutation = 1;
    {PROTOBUF_FIELD_OFFSET(mutation_list, _impl_.mutation_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Parsimony::mut>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void mutation_list::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.mutation_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mutation_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* mutation_list::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const mutation_list& this_ = static_cast<const mutation_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* mutation_list::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const mutation_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Parsimony.mutation_list)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .Parsimony.mut mutation = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_mutation_size());
               i < n; i++) {
            const auto& repfield = this_._internal_mutation().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Parsimony.mutation_list)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t mutation_list::ByteSizeLong(const MessageLite& base) {
          const mutation_list& this_ = static_cast<const mutation_list&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t mutation_list::ByteSizeLong() const {
          const mutation_list& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Parsimony.mutation_list)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Parsimony.mut mutation = 1;
            {
              total_size += 1UL * this_._internal_mutation_size();
              for (const auto& msg : this_._internal_mutation()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void mutation_list::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<mutation_list*>(&to_msg);
  auto& from = static_cast<const mutation_list&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.mutation_list)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_mutation()->MergeFrom(
      from._internal_mutation());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void mutation_list::CopyFrom(const mutation_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.mutation_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void mutation_list::InternalSwap(mutation_list* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.mutation_.InternalSwap(&other->_impl_.mutation_);
}

::google::protobuf::Metadata mutation_list::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class condensed_node::_Internal {
 public:
};

condensed_node::condensed_node(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Parsimony.condensed_node)
}
inline PROTOBUF_NDEBUG_INLINE condensed_node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Parsimony::condensed_node& from_msg)
      : condensed_leaves_{visibility, arena, from.condensed_leaves_},
        node_name_(arena, from.node_name_),
        _cached_size_{0} {}

condensed_node::condensed_node(
    ::google::protobuf::Arena* arena,
    const condensed_node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  condensed_node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Parsimony.condensed_node)
}
inline PROTOBUF_NDEBUG_INLINE condensed_node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : condensed_leaves_{visibility, arena},
        node_name_(arena),
        _cached_size_{0} {}

inline void condensed_node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
condensed_node::~condensed_node() {
  // @@protoc_insertion_point(destructor:Parsimony.condensed_node)
  SharedDtor(*this);
}
inline void condensed_node::SharedDtor(MessageLite& self) {
  condensed_node& this_ = static_cast<condensed_node&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* condensed_node::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) condensed_node(arena);
}
constexpr auto condensed_node::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(condensed_node, _impl_.condensed_leaves_) +
          decltype(condensed_node::_impl_.condensed_leaves_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(condensed_node), alignof(condensed_node), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&condensed_node::PlacementNew_,
                                 sizeof(condensed_node),
                                 alignof(condensed_node));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull condensed_node::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_condensed_node_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &condensed_node::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<condensed_node>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &condensed_node::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<condensed_node>(), &condensed_node::ByteSizeLong,
            &condensed_node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(condensed_node, _impl_._cached_size_),
        false,
    },
    &condensed_node::kDescriptorMethods,
    &descriptor_table_parsimony_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* condensed_node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> condensed_node::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Parsimony::condensed_node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string condensed_leaves = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(condensed_node, _impl_.condensed_leaves_)}},
    // string node_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(condensed_node, _impl_.node_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_name = 1;
    {PROTOBUF_FIELD_OFFSET(condensed_node, _impl_.node_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string condensed_leaves = 2;
    {PROTOBUF_FIELD_OFFSET(condensed_node, _impl_.condensed_leaves_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\30\11\20\0\0\0\0\0"
    "Parsimony.condensed_node"
    "node_name"
    "condensed_leaves"
  }},
};

PROTOBUF_NOINLINE void condensed_node::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.condensed_node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.condensed_leaves_.Clear();
  _impl_.node_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* condensed_node::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const condensed_node& this_ = static_cast<const condensed_node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* condensed_node::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const condensed_node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Parsimony.condensed_node)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_name = 1;
          if (!this_._internal_node_name().empty()) {
            const std::string& _s = this_._internal_node_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Parsimony.condensed_node.node_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string condensed_leaves = 2;
          for (int i = 0, n = this_._internal_condensed_leaves_size(); i < n; ++i) {
            const auto& s = this_._internal_condensed_leaves().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Parsimony.condensed_node.condensed_leaves");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Parsimony.condensed_node)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t condensed_node::ByteSizeLong(const MessageLite& base) {
          const condensed_node& this_ = static_cast<const condensed_node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t condensed_node::ByteSizeLong() const {
          const condensed_node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Parsimony.condensed_node)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string condensed_leaves = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_condensed_leaves().size());
              for (int i = 0, n = this_._internal_condensed_leaves().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_condensed_leaves().Get(i));
              }
            }
          }
           {
            // string node_name = 1;
            if (!this_._internal_node_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void condensed_node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<condensed_node*>(&to_msg);
  auto& from = static_cast<const condensed_node&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.condensed_node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_condensed_leaves()->MergeFrom(from._internal_condensed_leaves());
  if (!from._internal_node_name().empty()) {
    _this->_internal_set_node_name(from._internal_node_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void condensed_node::CopyFrom(const condensed_node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.condensed_node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void condensed_node::InternalSwap(condensed_node* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.condensed_leaves_.InternalSwap(&other->_impl_.condensed_leaves_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_name_, &other->_impl_.node_name_, arena);
}

::google::protobuf::Metadata condensed_node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class node_metadata::_Internal {
 public:
};

node_metadata::node_metadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Parsimony.node_metadata)
}
inline PROTOBUF_NDEBUG_INLINE node_metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Parsimony::node_metadata& from_msg)
      : clade_annotations_{visibility, arena, from.clade_annotations_},
        _cached_size_{0} {}

node_metadata::node_metadata(
    ::google::protobuf::Arena* arena,
    const node_metadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  node_metadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Parsimony.node_metadata)
}
inline PROTOBUF_NDEBUG_INLINE node_metadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : clade_annotations_{visibility, arena},
        _cached_size_{0} {}

inline void node_metadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
node_metadata::~node_metadata() {
  // @@protoc_insertion_point(destructor:Parsimony.node_metadata)
  SharedDtor(*this);
}
inline void node_metadata::SharedDtor(MessageLite& self) {
  node_metadata& this_ = static_cast<node_metadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* node_metadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) node_metadata(arena);
}
constexpr auto node_metadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(node_metadata, _impl_.clade_annotations_) +
          decltype(node_metadata::_impl_.clade_annotations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(node_metadata), alignof(node_metadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&node_metadata::PlacementNew_,
                                 sizeof(node_metadata),
                                 alignof(node_metadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull node_metadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_node_metadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &node_metadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<node_metadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &node_metadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<node_metadata>(), &node_metadata::ByteSizeLong,
            &node_metadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(node_metadata, _impl_._cached_size_),
        false,
    },
    &node_metadata::kDescriptorMethods,
    &descriptor_table_parsimony_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* node_metadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> node_metadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Parsimony::node_metadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string clade_annotations = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(node_metadata, _impl_.clade_annotations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string clade_annotations = 1;
    {PROTOBUF_FIELD_OFFSET(node_metadata, _impl_.clade_annotations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\27\21\0\0\0\0\0\0"
    "Parsimony.node_metadata"
    "clade_annotations"
  }},
};

PROTOBUF_NOINLINE void node_metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.node_metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clade_annotations_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* node_metadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const node_metadata& this_ = static_cast<const node_metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* node_metadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const node_metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Parsimony.node_metadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string clade_annotations = 1;
          for (int i = 0, n = this_._internal_clade_annotations_size(); i < n; ++i) {
            const auto& s = this_._internal_clade_annotations().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Parsimony.node_metadata.clade_annotations");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Parsimony.node_metadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t node_metadata::ByteSizeLong(const MessageLite& base) {
          const node_metadata& this_ = static_cast<const node_metadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t node_metadata::ByteSizeLong() const {
          const node_metadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Parsimony.node_metadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string clade_annotations = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_clade_annotations().size());
              for (int i = 0, n = this_._internal_clade_annotations().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_clade_annotations().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void node_metadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<node_metadata*>(&to_msg);
  auto& from = static_cast<const node_metadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.node_metadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_clade_annotations()->MergeFrom(from._internal_clade_annotations());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void node_metadata::CopyFrom(const node_metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.node_metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void node_metadata::InternalSwap(node_metadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.clade_annotations_.InternalSwap(&other->_impl_.clade_annotations_);
}

::google::protobuf::Metadata node_metadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class data::_Internal {
 public:
};

data::data(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Parsimony.data)
}
inline PROTOBUF_NDEBUG_INLINE data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Parsimony::data& from_msg)
      : node_mutations_{visibility, arena, from.node_mutations_},
        condensed_nodes_{visibility, arena, from.condensed_nodes_},
        metadata_{visibility, arena, from.metadata_},
        newick_(arena, from.newick_),
        _cached_size_{0} {}

data::data(
    ::google::protobuf::Arena* arena,
    const data& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Parsimony.data)
}
inline PROTOBUF_NDEBUG_INLINE data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_mutations_{visibility, arena},
        condensed_nodes_{visibility, arena},
        metadata_{visibility, arena},
        newick_(arena),
        _cached_size_{0} {}

inline void data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
data::~data() {
  // @@protoc_insertion_point(destructor:Parsimony.data)
  SharedDtor(*this);
}
inline void data::SharedDtor(MessageLite& self) {
  data& this_ = static_cast<data&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.newick_.Destroy();
  this_._impl_.~Impl_();
}

inline void* data::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) data(arena);
}
constexpr auto data::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(data, _impl_.node_mutations_) +
          decltype(data::_impl_.node_mutations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(data, _impl_.condensed_nodes_) +
          decltype(data::_impl_.condensed_nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(data, _impl_.metadata_) +
          decltype(data::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(data), alignof(data), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&data::PlacementNew_,
                                 sizeof(data),
                                 alignof(data));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull data::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_data_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &data::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<data>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &data::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<data>(), &data::ByteSizeLong,
            &data::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(data, _impl_._cached_size_),
        false,
    },
    &data::kDescriptorMethods,
    &descriptor_table_parsimony_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* data::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 29, 2> data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Parsimony::data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Parsimony.node_metadata metadata = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(data, _impl_.metadata_)}},
    // string newick = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(data, _impl_.newick_)}},
    // repeated .Parsimony.mutation_list node_mutations = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(data, _impl_.node_mutations_)}},
    // repeated .Parsimony.condensed_node condensed_nodes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(data, _impl_.condensed_nodes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string newick = 1;
    {PROTOBUF_FIELD_OFFSET(data, _impl_.newick_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Parsimony.mutation_list node_mutations = 2;
    {PROTOBUF_FIELD_OFFSET(data, _impl_.node_mutations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Parsimony.condensed_node condensed_nodes = 3;
    {PROTOBUF_FIELD_OFFSET(data, _impl_.condensed_nodes_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Parsimony.node_metadata metadata = 4;
    {PROTOBUF_FIELD_OFFSET(data, _impl_.metadata_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Parsimony::mutation_list>()},
    {::_pbi::TcParser::GetTable<::Parsimony::condensed_node>()},
    {::_pbi::TcParser::GetTable<::Parsimony::node_metadata>()},
  }}, {{
    "\16\6\0\0\0\0\0\0"
    "Parsimony.data"
    "newick"
  }},
};

PROTOBUF_NOINLINE void data::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_mutations_.Clear();
  _impl_.condensed_nodes_.Clear();
  _impl_.metadata_.Clear();
  _impl_.newick_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* data::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const data& this_ = static_cast<const data&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* data::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const data& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Parsimony.data)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string newick = 1;
          if (!this_._internal_newick().empty()) {
            const std::string& _s = this_._internal_newick();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Parsimony.data.newick");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .Parsimony.mutation_list node_mutations = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_mutations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_mutations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Parsimony.condensed_node condensed_nodes = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_condensed_nodes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_condensed_nodes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Parsimony.node_metadata metadata = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_metadata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_metadata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Parsimony.data)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t data::ByteSizeLong(const MessageLite& base) {
          const data& this_ = static_cast<const data&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t data::ByteSizeLong() const {
          const data& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Parsimony.data)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Parsimony.mutation_list node_mutations = 2;
            {
              total_size += 1UL * this_._internal_node_mutations_size();
              for (const auto& msg : this_._internal_node_mutations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Parsimony.condensed_node condensed_nodes = 3;
            {
              total_size += 1UL * this_._internal_condensed_nodes_size();
              for (const auto& msg : this_._internal_condensed_nodes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Parsimony.node_metadata metadata = 4;
            {
              total_size += 1UL * this_._internal_metadata_size();
              for (const auto& msg : this_._internal_metadata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string newick = 1;
            if (!this_._internal_newick().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_newick());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void data::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<data*>(&to_msg);
  auto& from = static_cast<const data&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_mutations()->MergeFrom(
      from._internal_node_mutations());
  _this->_internal_mutable_condensed_nodes()->MergeFrom(
      from._internal_condensed_nodes());
  _this->_internal_mutable_metadata()->MergeFrom(
      from._internal_metadata());
  if (!from._internal_newick().empty()) {
    _this->_internal_set_newick(from._internal_newick());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void data::CopyFrom(const data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void data::InternalSwap(data* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_mutations_.InternalSwap(&other->_impl_.node_mutations_);
  _impl_.condensed_nodes_.InternalSwap(&other->_impl_.condensed_nodes_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.newick_, &other->_impl_.newick_, arena);
}

::google::protobuf::Metadata data::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Parsimony
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_parsimony_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
